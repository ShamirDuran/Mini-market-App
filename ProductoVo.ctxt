#BlueJ class context
comment0.target=ProductoVo
comment0.text=\r\n\ Esta\ clase\ crea\ y\ contiene\ la\ informacion\ de\ los\ productos\ al\ ser\ traidos\ de\r\n\ la\ db\r\n\r\n\ @author\ Shamir\ Duran,\ Nicolas\ Galvan\r\n\ @version\ 0.1\r\n\r\n
comment1.params=id\ nombre\ precio\ cant_medida\ uni_medida\ cantidad
comment1.target=ProductoVo(int,\ java.lang.String,\ double,\ double,\ java.lang.String,\ int)
comment1.text=\r\n\ @param\ id\ Valor\ autoingrementado\ que\ asigna\ la\ db\ al\ regitrar\ un\r\n\ producto.\ Se\ trae\ desde\ la\ db\ al\ momento\ de\ listas\ los\ productos\ en\ la\r\n\ vista\ ProductosView\r\n\ @param\ nombre\ Nombre\ del\ producto\r\n\ @param\ precio\ Precio\ del\ producto\r\n\ @param\ cant_medida\ valor\ numerico\ cantidad\ de\ medida\r\n\ @param\ uni_medida\ Unidad\ de\ medida.\ Ej\:\ kg,\ g\r\n\ @param\ cantidad\ Cantidad\ del\ producto\ en\ stock\r\n
comment10.params=
comment10.target=double\ getPrecio()
comment11.params=precio
comment11.target=void\ setPrecio(double)
comment12.params=
comment12.target=int\ getCantidad()
comment13.params=cantidad
comment13.target=void\ setCantidad(int)
comment14.params=
comment14.target=int\ getId()
comment15.params=
comment15.target=double\ getcant_medida()
comment16.params=cant_medida
comment16.target=void\ setcant_medida(double)
comment17.params=
comment17.target=java.lang.String\ getuni_medida()
comment18.params=uni_medida
comment18.target=void\ setuni_medida(java.lang.String)
comment19.params=
comment19.target=int\ getCantidadVendidos()
comment19.text=\r\n\ @return\ the\ cantidadVendidos\r\n
comment2.params=id\ nombre\ precio\ cant_medida\ uni_medida\ cantidad
comment2.target=void\ modificar(int,\ java.lang.String,\ double,\ double,\ java.lang.String,\ int)
comment20.params=cantidadVendidos
comment20.target=void\ setCantidadVendidos(int)
comment20.text=\r\n\ @param\ cantidadVendidos\ the\ cantidadVendidos\ to\ set\r\n
comment3.params=cantidad
comment3.target=boolean\ restarCantidad(int)
comment3.text=\r\n\ Cuando\ se\ quiere\ agrear\ un\ producto\ a\ una\ venta\ en\ progreso,\ se\ tiene\ que\r\n\ validad\ primero\ si\ quedan\ unidades\ disponibles\ para\ la\ venta.\r\n\r\n\ @param\ cantidad\ Cantidad\ del\ producto\ que\ se\ desea\ comprar.\r\n\ @return\ Booleano\ que\ indica\ el\ estado\ de\ la\ transacci\u00F3n\r\n
comment4.params=cantidad
comment4.target=int\ sumarCantidadV(int)
comment5.params=cantidad
comment5.target=int\ restarCantidadV(int)
comment6.params=cantidad
comment6.target=void\ restaurarCantidad(int)
comment6.text=\r\n\ Cuando\ se\ elimina\ una\ venta,\ o\ se\ elimina\ un\ producto\ de\ una\ venta\ este\r\n\ metodo\ se\ utiliza\ para\ agregar\ a\ la\ cantidad\ en\ stock\ las\ unidades\ que\ se\r\n\ recuperaron.\r\n\r\n\ @param\ cantidad\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment8.params=
comment8.target=java.lang.String\ getNombre()
comment9.params=nombre
comment9.target=void\ setNombre(java.lang.String)
numComments=21
