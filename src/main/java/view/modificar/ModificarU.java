/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.modificar;

import controller.UsuariosController;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.vo.UsuarioVo;

/**
 *
 * @author NICOLAS
 */
public class ModificarU extends javax.swing.JFrame {

    private UsuariosController usercon;
    private UsuarioVo user;

    /**
     * Creates new form RegistrarC
     */
    public ModificarU() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        etCedula = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        etEdad = new javax.swing.JTextField();
        etDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        etNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        etCorreo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbGenero = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(243, 243, 243));
        setMinimumSize(new java.awt.Dimension(779, 603));
        setResizable(false);

        body.setBackground(new java.awt.Color(243, 243, 243));
        body.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));

        btnGuardar.setBackground(new java.awt.Color(172, 78, 233));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("ACTUALIZAR");
        btnGuardar.setBorderPainted(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 0, 0));
        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_trash_19px.png"))); // NOI18N
        btnCancelar.setBorderPainted(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        etCedula.setForeground(new java.awt.Color(102, 102, 102));
        etCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etCedulaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Género*");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Cédula");

        etEdad.setForeground(new java.awt.Color(102, 102, 102));
        etEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etEdadActionPerformed(evt);
            }
        });

        etDireccion.setForeground(new java.awt.Color(102, 102, 102));
        etDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etDireccionActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Dirección");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Edad");

        etNombre.setForeground(new java.awt.Color(102, 102, 102));
        etNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etNombreActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Nombre*");

        etCorreo.setForeground(new java.awt.Color(102, 102, 102));
        etCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etCorreoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Correo");

        jLabel1.setBackground(new java.awt.Color(243, 243, 243));
        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DETALLES CLIENTE");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Los campos con * son obligatorios");

        cbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un género", "Masculino", "Femenino" }));

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnGuardar)
                .addGap(280, 280, 280))
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(etNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(51, 51, 51))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(jLabel9)
                .addGap(29, 29, 29)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int click = JOptionPane.showConfirmDialog(this, "¿Esta seguro de que desea eliminar este cliente?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (click == JOptionPane.YES_OPTION) {
            if (usercon.eliminarUsuario(user.getId())) {
                this.dispose();
                JOptionPane.showMessageDialog(null, "Usuario eliminado correctamente!");
            } else {
                JOptionPane.showMessageDialog(this, "No se elimino el usuario", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void etCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etCedulaActionPerformed

    private void etNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etNombreActionPerformed

    private void etCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etCorreoActionPerformed

    private void etDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etDireccionActionPerformed

    private void etEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etEdadActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        user.setId(user.getId());
        int generoSelected = cbGenero.getSelectedIndex();
        // Los else seteando null y 0 es para representar cuando el usuario quiere eliminar ese dato
        // entoncesal recibir 0 o null el UsuarioDao los manda a la db como null y asi se eliminan.
        if (!etNombre.getText().equals("") && generoSelected != 0) {
            if (!validarCampos()) {
                user.setNombre(etNombre.getText());

                if (!etCorreo.getText().equals("")) {
                    user.setCorreo(etCorreo.getText());
                } else {
                    user.setCorreo(null);
                }

                if (!etDireccion.getText().equals("")) {
                    user.setDireccion(etDireccion.getText());
                } else {
                    user.setDireccion(null);
                }

                if (!etEdad.getText().equals("")) {
                    user.setEdad(Integer.parseInt(etEdad.getText()));
                } else {
                    user.setEdad(0);
                }

                if (generoSelected == 1) {
                    user.setGenero(1);
                } else {
                    user.setGenero(0);
                }

                if (!etCedula.getText().equals("")) {
                    user.setCedula(Integer.parseInt(etCedula.getText()));
                } else {
                    user.setCedula(0);
                }

                if (usercon.modificarUsuario(user)) {
                    this.dispose();
                    JOptionPane.showMessageDialog(null, "Usuario modificado correctamente!");
                } else {
                    JOptionPane.showMessageDialog(this, "No se modifico el usuario", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe llenar todos los campos obligatorios");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarU().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel body;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbGenero;
    private javax.swing.JTextField etCedula;
    private javax.swing.JTextField etCorreo;
    private javax.swing.JTextField etDireccion;
    private javax.swing.JTextField etEdad;
    private javax.swing.JTextField etNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

    /**
     * @param user the user to set
     */
    public void setUser(UsuarioVo user) {
        this.user = user;
        etNombre.setText(user.getNombre());

        if (user.getGenero() == 0) { // mujer
            cbGenero.setSelectedIndex(2);
        } else {
            cbGenero.setSelectedIndex(1);
        }

        if (user.getCorreo() != null) {
            etCorreo.setText(user.getCorreo());
        }

        if (user.getDireccion() != null) {
            etDireccion.setText(user.getDireccion());
        }

        if (user.getEdad() != 0) {
            etEdad.setText(String.valueOf(user.getEdad()));
        }

        if (user.getCedula() != 0) {
            etCedula.setText(String.valueOf(user.getCedula()));
        }
    }

    /**
     * @param usercon the usercon to set
     */
    public void setUsercon(UsuariosController usercon) {
        this.usercon = usercon;
    }

    /**
     * Valida los campos del formulario. Los campos opcionales se validan solo
     * si estan llenos, es decir, si se desean usar
     *
     * @return true si todos los campos son validos y false de lo contrario
     */
    private boolean validarCampos() {
        boolean error = false;

        if (!validarNombre()) {
            error = true;
        }

        if (!etCorreo.getText().equals("") && !validarCorreo()) {
            error = true;
        }

        if (!etDireccion.getText().equals("") && !validarDireccion()) {
            error = true;
        }

        if (!etEdad.getText().equals("") && !validarEdad()) {
            error = true;
        }

        if (!etCedula.getText().equals("") && !validarCedula()) {
            error = true;
        }

        return error;
    }

    private boolean validarNombre() {
        boolean checkNombre = validarCampo(etNombre);
        if (checkNombre) {
            etNombre.setText(null);
            JOptionPane.showMessageDialog(this, "Escriba un nombre valido", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validarCorreo() {
        boolean checkCorreo = validarCampo(etCorreo);
        if (checkCorreo) {
            etCorreo.setText(null);
            JOptionPane.showMessageDialog(this, "Escriba un correo valido", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validarDireccion() {
        boolean checkDir = validarCampo(etDireccion);
        if (checkDir) {
            etDireccion.setText(null);
            JOptionPane.showMessageDialog(this, "Escriba una dirección valida", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validarEdad() {
        boolean checkEdad = validarCampo(etEdad);
        if (!checkEdad) {
            etEdad.setText(null);
            JOptionPane.showMessageDialog(this, "Escriba una edad valida", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private boolean validarCedula() {
        boolean checkCedula = validarCampo(etCedula);
        if (!checkCedula) {
            etCedula.setText(null);
            JOptionPane.showMessageDialog(this, "Escriba una cédula valida", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    /**
     * Metodo para validar que tipo de input tiene el campo
     *
     * @param campo InputText que se quiere calidar
     * @return True si es númerico, False si es string
     */
    private boolean validarCampo(JTextField campo) {
        try {
            double valor = Double.parseDouble(campo.getText());
            return true;
        } catch (Exception e) {
            System.out.println("Error campos " + e);
            return false;
        }
    }
}
